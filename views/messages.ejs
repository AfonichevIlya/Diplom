<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Other head elements -->
    <title>Чат</title>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <style>
      /* Add CSS styles for message blocks here */
      .message {
        margin-bottom: 10px;
        padding: 10px;
        background-color: #f2f2f2;
        border-radius: 10px;
        display: flex;
        align-items: center;
      }

      .message .avatar {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        margin-right: 10px;
      }

      .message .content {
        flex: 1;
      }
    </style>
    <script>
      const socket = io();

      const sendMessage = () => {
        const messageInput = document.getElementById("messageInput");
        const message = messageInput.value;

        socket.emit("message chat", {
          message: message,
          username: "<%= user.name %>",
          senderId: "<%= user.id %>",
          chatId: "<%= chatId %>",
          avatar: "<%= user.avatar %>",
        });

        messageInput.value = "";
      };

      socket.on("message chat", (msg) => {
        const messagesList = document.getElementById("messagesList");

        // Create message block
        const messageBlock = document.createElement("div");
        messageBlock.classList.add("message");

        // Create avatar element
        const avatar = document.createElement("img");
        avatar.src = `/avatars/${msg.avatar}`;
        avatar.alt = "avatar";
        avatar.classList.add("avatar");

        // Create content container
        const content = document.createElement("div");
        content.classList.add("content");

        // Create username element
        const username = document.createElement("div");
        username.textContent = msg.username;

        // Create text element
        const text = document.createElement("div");
        text.textContent = msg.text;

        // Create time element
        const time = document.createElement("div");
        time.textContent = formatTime(msg.time);

        // Append elements to content container
        content.appendChild(username);
        content.appendChild(text);
        content.appendChild(time);

        // Append avatar and content to message block
        messageBlock.appendChild(avatar);
        messageBlock.appendChild(content);

        // Append message block to messages list
        messagesList.appendChild(messageBlock);
      });

      function formatTime(timeString) {
        return moment(timeString).format("HH:mm:ss");
      }

      window.onload = function () {
        fetch(`/chats/<%= chatId %>/messages`)
          .then((response) => response.json())
          .then((messages) => {
            console.log(messages); // Log the received messages to the console

            const messagesList = document.getElementById("messagesList");
            messages.forEach((msg) => {
              console.log(msg.avatar);
            });

            messages.forEach((msg) => {
              const messageBlock = document.createElement("div");
              messageBlock.classList.add("message");

              // Create avatar element
              const avatar = document.createElement("img");
              avatar.src = `/avatars/${msg.avatar}`;
              avatar.alt = "avatar";
              avatar.classList.add("avatar");

              // Create content container
              const content = document.createElement("div");
              content.classList.add("content");

              // Create username element
              const username = document.createElement("div");
              username.textContent = msg.username;

              // Create text element
              const text = document.createElement("div");
              text.textContent = msg.text;

              // Create time element
              const time = document.createElement("div");
              time.textContent = formatTime(msg.time);

              // Append elements to content container
              content.appendChild(username);
              content.appendChild(text);
              content.appendChild(time);

              // Append avatar and content to message block
              messageBlock.appendChild(avatar);
              messageBlock.appendChild(content);

              // Append message block to messages list
              messagesList.appendChild(messageBlock);
            });
          })
          .catch((error) => console.error("Ошибка загрузки сообщений:", error));
      };
    </script>
  </head>
  <body>
    <h1>Чат</h1>
    <div id="messagesList"></div>
    <input type="text" id="messageInput" />
    <button onclick="sendMessage()">Отправить</button>
  </body>
</html>
